package smartretailer;

import Dialog.CreateRecept;
import Dialog.cache;
import controllers.ServerController;
import controllers.WebServiceController;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.GridLayout;
import java.io.IOException;
import java.text.DecimalFormat;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.border.CompoundBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

import org.json.JSONArray;
import org.json.JSONObject;

/**
 * @author Oshan
 */
public class Invoice extends javax.swing.JFrame {

	/**
	 * Creates new form Invoice
	 */
	private static DefaultTableModel dtm;
	private static DefaultTableModel Idtm;
	private static Thread searchProductThread;
	private static Thread InvoiceDataThread;


	private static int invoiceId;
	private static Double DiscountValue;
	private static Double VatPrice;
	private static Double GTotal;
	private static Double GDiscount;

	public static Invoice invoiceView;

	boolean pressed = false;
	public boolean ltsBtnStatus = false;
	public String selectedLtsPrice = "0";

	static DecimalFormat df2 = new DecimalFormat("#,###,###,##0.00");

	public Invoice(int invoiceId) {
		initComponents();
		invoiceView = this;
		setTitle("Client Management System | Invoice Create | AMAZOFT");
		//this.setAlwaysOnTop(true);
		this.setExtendedState(Invoice.MAXIMIZED_BOTH);
		//setResizable(false);

		Invoice.invoiceId = invoiceId;


		dtm = (DefaultTableModel) SearchProductTbl.getModel();
		searchData();

		Idtm = (DefaultTableModel) InvoiceItemTable.getModel();
		LoadInvoiceData();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */


	public static void searchData() {
		dtm.setRowCount(0);

		searchProductThread = new Thread(new Runnable() {
			@Override
			public void run() {

				try {
					String SearchName = SearchField.getText();
					JSONObject jo = ServerController.getJsonObject(WebServiceController.DOWNLOAD_SEARCH_PRODUCTS, ServerController.getSearchProductsParams(SearchName));
					if (jo != null) {
						if (jo.getBoolean("result")) {

							JSONArray array = jo.getJSONArray("data");

							for (int i = 0; i < array.length(); i++) {

								JSONObject pd = array.getJSONObject(i);

								int ProductId = pd.getInt("ProductId");
								String ProductName = pd.getString("ProductName");
								String ProductLocation = pd.getString("ProductLocation");
								String ProductNumber = pd.getString("ProductNumber");
								Double ProductSelling = pd.getDouble("ProductSelling");
								String pQty = pd.getDouble("ProductQty") + " " + pd.getString("ProductType");


								Vector v = new Vector();
								v.add(ProductName);
								v.add(ProductNumber);
								v.add(ProductLocation);
								v.add(pQty);
								v.add(df2.format(ProductSelling));
								v.add(ProductId);

								dtm.addRow(v);
							}

							DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
							rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
							SearchProductTbl.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);


						} else {
							System.out.println("error");
						}

					}

				} catch (Exception e) {
					e.printStackTrace();
				}


			}

		});


		searchProductThread.start();


	}

	private void LoadInvoiceData() {

		InvoiceDataThread = new Thread(new Runnable() {
			@Override
			public void run() {

				try {
					JSONObject jj = ServerController.getJsonObject(WebServiceController.GET_INVOICE_Details, ServerController.getInvoiceAllDetailsParams(invoiceId));

					if (jj != null && jj.getString("invoiceStatus").equals("0")) {

						JSONArray array = jj.getJSONArray("data");

						for (int i = 0; i < array.length(); i++) {

							JSONObject pd = array.getJSONObject(i);
							String ClientsName = pd.getString("ClientName");
							String InvoiceDateTime = pd.getString("InvoiceDateTime");

							int InvoiceNumber = invoiceId + 10000;

							InvoiceNumberLbl.setText("Invoice Number: " + InvoiceNumber);
							ClientNameLbl.setText("Client Name: " + ClientsName);
							InvoiceDateLbl.setText("Invoice Date: " + InvoiceDateTime);
						}
					} else {

						JSONObject jo = ServerController.getJsonObject(WebServiceController.DOWNLOAD_INVOICE_Details, ServerController.getInvoiceAllDetailsParams(invoiceId));

						if (jo != null) {
							if (jo.getBoolean("result")) {


								JSONArray array = jo.getJSONArray("data");

								for (int i = 0; i < array.length(); i++) {

									JSONObject pd = array.getJSONObject(i);
									String ClientsName = pd.getString("ClientName");
									Double Vat = pd.getDouble("Vat");
									Double Discount = pd.getDouble("Discount");
									String InvoiceDateTime = pd.getString("InvoiceDateTime");
									Double VatPrice = pd.getDouble("VatPrice");
									Double DiscountPrice = pd.getDouble("DiscountPrice");
									Double GrandTotal = pd.getDouble("GrandTotal");


									Invoice.DiscountValue = Discount;
									Invoice.VatPrice = Vat;
									Invoice.GTotal = GrandTotal;

									int InvoiceNumber = invoiceId + 10000;


									InvoiceNumberLbl.setText("Invoice Number: " + InvoiceNumber);
									ClientNameLbl.setText("Client Name: " + ClientsName);
									InvoiceDateLbl.setText("Invoice Date: " + InvoiceDateTime);

									VatTotalLbl.setText(df2.format(VatPrice));
									DiscountTotalLbl.setText("(-" + df2.format(DiscountPrice) + ")");
									totalAmountLbl.setText(df2.format(GrandTotal - VatPrice));
									GrandTotalLbl.setText(df2.format(GrandTotal - DiscountPrice));
									GDiscount = DiscountPrice;


								}


								Idtm = (DefaultTableModel) InvoiceItemTable.getModel();
								Idtm.setRowCount(0);

								JSONArray arrayD = jo.getJSONArray("invoiceitemdataArray");

								for (int p = 0; p < arrayD.length(); p++) {


									JSONObject sd = arrayD.getJSONObject(p);

									int InvoiceItemId = sd.getInt("InvoiceItemId");
									int UserId = sd.getInt("UserId");
									int PBID = sd.getInt("PBID");
									Double Quantity = sd.getDouble("ProductQty");
									Double SellingPrice = sd.getDouble("SellingPrice");
									int ProductCount = sd.getInt("CountView");
									String ProductName = sd.getString("ProductName");
									String ProductNumber = sd.getString("ProductNumber");
									int InvoiceProductDateTime = sd.getInt("InvoiceProductDateTime");
									Double ItemSubTotal = sd.getDouble("ItemSubTotal");
									Double ItemDiscount = sd.getDouble("ItemDiscount");

									String DisplayName = ProductName + " (" + ProductNumber + ")";

									Vector v = new Vector();
									v.add(ProductCount);
									v.add(DisplayName);
									v.add(Quantity);
									v.add(df2.format(SellingPrice));
									v.add(df2.format(ItemDiscount));
									v.add(df2.format(ItemSubTotal - ItemDiscount));
									v.add(PBID);
									v.add(InvoiceItemId);

									Idtm.addRow(v);
								}

								DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
								rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
								InvoiceItemTable.getColumnModel().getColumn(2).setCellRenderer(rightRenderer);
								InvoiceItemTable.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
								InvoiceItemTable.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);
								InvoiceItemTable.getColumnModel().getColumn(5).setCellRenderer(rightRenderer);
								InvoiceItemTable.getColumnModel().getColumn(6).setCellRenderer(rightRenderer);

							} else {
								System.out.println("error");
							}


						}

					}


				} catch (Exception e) {
					e.printStackTrace();
				}


			}

		});


		InvoiceDataThread.start();

	}


	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		jScrollPane1 = new javax.swing.JScrollPane();
		jPanel2 = new javax.swing.JPanel();
		jPanel6 = new javax.swing.JPanel();
		SearchField = new javax.swing.JTextField();
		SearchBtn = new javax.swing.JButton();
		ClearBtn = new javax.swing.JButton();
		jToolBar1 = new javax.swing.JToolBar();
		jScrollPane2 = new javax.swing.JScrollPane();
		SearchProductTbl = new javax.swing.JTable();
		jPanel3 = new javax.swing.JPanel();
		jPanel4 = new javax.swing.JPanel();
		Logo_etc_area = new javax.swing.JPanel();
		jPanel5 = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		InvoiceNumberLbl = new javax.swing.JLabel();
		ClientNameLbl = new javax.swing.JLabel();
		InvoiceDateLbl = new javax.swing.JLabel();
		Grn_item_area = new javax.swing.JPanel();
		jScrollPane3 = new javax.swing.JScrollPane();
		InvoiceItemTable = new javax.swing.JTable();
		jPanel7 = new javax.swing.JPanel();
		jLabel3 = new javax.swing.JLabel();
		GrandTotalLbl = new javax.swing.JLabel();
		jLabel6 = new javax.swing.JLabel();
		DiscountTotalLbl = new javax.swing.JLabel();
		jLabel7 = new javax.swing.JLabel();
		VatTotalLbl = new javax.swing.JLabel();
		jLabel8 = new javax.swing.JLabel();
		totalAmountLbl = new javax.swing.JLabel();
		jPanel8 = new javax.swing.JPanel();
		jPanel9 = new javax.swing.JPanel();
		Num1Btn = new javax.swing.JButton();
		Num2Btn = new javax.swing.JButton();
		Num3Btn = new javax.swing.JButton();
		Num4Btn = new javax.swing.JButton();
		Num5Btn = new javax.swing.JButton();
		Num6Btn = new javax.swing.JButton();
		Num7Btn = new javax.swing.JButton();
		Num8Btn = new javax.swing.JButton();
		Num9Btn = new javax.swing.JButton();
		NumBackSpaceBtn = new javax.swing.JButton();
		Num0Btn = new javax.swing.JButton();
		NumEnterBtn = new javax.swing.JButton();
		DataAddValueField = new javax.swing.JTextField();
		DataAddTypeLbl = new javax.swing.JLabel();
		NumDotBtn = new javax.swing.JButton();
		NumCBtn = new javax.swing.JButton();
		discountByItemBox = new javax.swing.JTextField();
		jLabel4 = new javax.swing.JLabel();
		jPanel10 = new javax.swing.JPanel();
		GenarateInvoiceBtn = new javax.swing.JButton();
		ItemRemoveBtn = new javax.swing.JButton();
		jLabel2 = new javax.swing.JLabel();
		BackBtn = new javax.swing.JButton();
		AddProductBtn = new javax.swing.JButton();
		VatBtn = new javax.swing.JButton();
		KeyboardOpenBtn = new javax.swing.JButton();
		ltsPriceBtn = new javax.swing.JButton();
		jLabel5 = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setMinimumSize(new java.awt.Dimension(1024, 768));

		jScrollPane1.setPreferredSize(new java.awt.Dimension(1400, 900));

		jPanel2.setPreferredSize(new java.awt.Dimension(1400, 900));

		SearchField.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
		SearchField.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				SearchFieldActionPerformed(evt);
			}
		});

		SearchBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
		SearchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/search.png"))); // NOI18N
		SearchBtn.setText("Search");
		SearchBtn.setPreferredSize(new java.awt.Dimension(105, 25));
		SearchBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				SearchBtnActionPerformed(evt);
			}
		});

		ClearBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
		ClearBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/clear.png"))); // NOI18N
		ClearBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				ClearBtnActionPerformed(evt);
			}
		});

		jToolBar1.setRollover(true);

		SearchProductTbl.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
		SearchProductTbl.setModel(new javax.swing.table.DefaultTableModel(
			new Object[][]{

			},
			new String[]{
				"Product Name", "Product Number", " Location", "Available Qty", "Price", "ProductId"
			}
		) {
			final boolean[] canEdit = new boolean[]{
				false, false, false, false, false, false
			};

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});
		SearchProductTbl.setRowHeight(50);
		SearchProductTbl.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				SearchProductTblMouseClicked(evt);
			}
		});
		jScrollPane2.setViewportView(SearchProductTbl);
		if (SearchProductTbl.getColumnModel().getColumnCount() > 0) {
			SearchProductTbl.getColumnModel().getColumn(1).setMinWidth(100);
			SearchProductTbl.getColumnModel().getColumn(1).setPreferredWidth(100);
			SearchProductTbl.getColumnModel().getColumn(1).setMaxWidth(100);
			SearchProductTbl.getColumnModel().getColumn(2).setMinWidth(90);
			SearchProductTbl.getColumnModel().getColumn(2).setPreferredWidth(90);
			SearchProductTbl.getColumnModel().getColumn(2).setMaxWidth(90);
			SearchProductTbl.getColumnModel().getColumn(3).setMinWidth(110);
			SearchProductTbl.getColumnModel().getColumn(3).setPreferredWidth(110);
			SearchProductTbl.getColumnModel().getColumn(3).setMaxWidth(110);
			SearchProductTbl.getColumnModel().getColumn(4).setMinWidth(100);
			SearchProductTbl.getColumnModel().getColumn(4).setPreferredWidth(100);
			SearchProductTbl.getColumnModel().getColumn(4).setMaxWidth(100);
			SearchProductTbl.getColumnModel().getColumn(5).setMinWidth(0);
			SearchProductTbl.getColumnModel().getColumn(5).setPreferredWidth(0);
			SearchProductTbl.getColumnModel().getColumn(5).setMaxWidth(0);
		}

		jToolBar1.add(jScrollPane2);

		javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
		jPanel6.setLayout(jPanel6Layout);
		jPanel6Layout.setHorizontalGroup(
			jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel6Layout.createSequentialGroup()
					.addContainerGap()
					.addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(jPanel6Layout.createSequentialGroup()
							.addComponent(SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 558, javax.swing.GroupLayout.PREFERRED_SIZE)
							.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
							.addComponent(SearchBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
							.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
							.addComponent(ClearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
					.addGap(0, 0, 0))
		);
		jPanel6Layout.setVerticalGroup(
			jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel6Layout.createSequentialGroup()
					.addContainerGap()
					.addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
							.addComponent(SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
							.addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addComponent(ClearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
					.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					.addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);

		jPanel3.setBackground(new java.awt.Color(255, 255, 255));

		Logo_etc_area.setBackground(new java.awt.Color(255, 255, 255));

		jPanel5.setBackground(new java.awt.Color(0, 51, 153));

		jLabel1.setBackground(new java.awt.Color(255, 255, 255));
		jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
		jLabel1.setForeground(new java.awt.Color(255, 255, 255));
		jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel1.setText("Invoice");

		javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
		jPanel5.setLayout(jPanel5Layout);
		jPanel5Layout.setHorizontalGroup(
			jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		);
		jPanel5Layout.setVerticalGroup(
			jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
		);

		InvoiceNumberLbl.setText("Invoice Number: ");

		ClientNameLbl.setText("Client Name:");

		InvoiceDateLbl.setText("Invoice Date:");

		javax.swing.GroupLayout Logo_etc_areaLayout = new javax.swing.GroupLayout(Logo_etc_area);
		Logo_etc_area.setLayout(Logo_etc_areaLayout);
		Logo_etc_areaLayout.setHorizontalGroup(
			Logo_etc_areaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				.addGroup(Logo_etc_areaLayout.createSequentialGroup()
					.addContainerGap()
					.addGroup(Logo_etc_areaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addComponent(InvoiceNumberLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(ClientNameLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(InvoiceDateLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
					.addContainerGap())
		);
		Logo_etc_areaLayout.setVerticalGroup(
			Logo_etc_areaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(Logo_etc_areaLayout.createSequentialGroup()
					.addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
					.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
					.addComponent(InvoiceNumberLbl)
					.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					.addComponent(ClientNameLbl)
					.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					.addComponent(InvoiceDateLbl)
					.addContainerGap())
		);

		Grn_item_area.setBackground(new java.awt.Color(255, 255, 255));

		InvoiceItemTable.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
		InvoiceItemTable.setModel(new javax.swing.table.DefaultTableModel(
			new Object[][]{

			},
			new String[]{
				"#", "Item Name", "Qty", "Price", "Discount", "Total", "PBID", "InvoiceItemId"
			}
		) {
			final boolean[] canEdit = new boolean[]{
				false, false, false, false, false, false, false, false
			};

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});
		InvoiceItemTable.setRowHeight(35);
		InvoiceItemTable.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				InvoiceItemTableMouseClicked(evt);
			}
		});
		jScrollPane3.setViewportView(InvoiceItemTable);
		if (InvoiceItemTable.getColumnModel().getColumnCount() > 0) {
			InvoiceItemTable.getColumnModel().getColumn(0).setMinWidth(30);
			InvoiceItemTable.getColumnModel().getColumn(0).setPreferredWidth(30);
			InvoiceItemTable.getColumnModel().getColumn(0).setMaxWidth(30);
			InvoiceItemTable.getColumnModel().getColumn(2).setMinWidth(50);
			InvoiceItemTable.getColumnModel().getColumn(2).setPreferredWidth(50);
			InvoiceItemTable.getColumnModel().getColumn(2).setMaxWidth(50);
			InvoiceItemTable.getColumnModel().getColumn(3).setMinWidth(80);
			InvoiceItemTable.getColumnModel().getColumn(3).setPreferredWidth(80);
			InvoiceItemTable.getColumnModel().getColumn(3).setMaxWidth(80);
			InvoiceItemTable.getColumnModel().getColumn(4).setMinWidth(80);
			InvoiceItemTable.getColumnModel().getColumn(4).setPreferredWidth(80);
			InvoiceItemTable.getColumnModel().getColumn(4).setMaxWidth(80);
			InvoiceItemTable.getColumnModel().getColumn(5).setMinWidth(80);
			InvoiceItemTable.getColumnModel().getColumn(5).setPreferredWidth(80);
			InvoiceItemTable.getColumnModel().getColumn(5).setMaxWidth(80);
			InvoiceItemTable.getColumnModel().getColumn(6).setMinWidth(0);
			InvoiceItemTable.getColumnModel().getColumn(6).setPreferredWidth(0);
			InvoiceItemTable.getColumnModel().getColumn(6).setMaxWidth(0);
			InvoiceItemTable.getColumnModel().getColumn(7).setMinWidth(0);
			InvoiceItemTable.getColumnModel().getColumn(7).setPreferredWidth(0);
			InvoiceItemTable.getColumnModel().getColumn(7).setMaxWidth(0);
		}

		jPanel7.setBackground(new java.awt.Color(255, 255, 255));

		jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
		jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
		jLabel3.setText("Net Amount:");

		GrandTotalLbl.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
		GrandTotalLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
		GrandTotalLbl.setText("0.00");

		jLabel6.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
		jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
		jLabel6.setText("Discount:");

		DiscountTotalLbl.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
		DiscountTotalLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
		DiscountTotalLbl.setText("-(0.00)");

		jLabel7.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
		jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
		jLabel7.setText("VAT(0%):");

		VatTotalLbl.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
		VatTotalLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
		VatTotalLbl.setText("0.00");

		jLabel8.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
		jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
		jLabel8.setText("Total:");

		totalAmountLbl.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
		totalAmountLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
		totalAmountLbl.setText("0.00");

		javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
		jPanel7.setLayout(jPanel7Layout);
		jPanel7Layout.setHorizontalGroup(
			jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel7Layout.createSequentialGroup()
					.addContainerGap()
					.addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(jPanel7Layout.createSequentialGroup()
							.addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
							.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
							.addComponent(GrandTotalLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addGroup(jPanel7Layout.createSequentialGroup()
							.addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
							.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
							.addComponent(DiscountTotalLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addGroup(jPanel7Layout.createSequentialGroup()
							.addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
							.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
							.addComponent(VatTotalLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
							.addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
							.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
							.addComponent(totalAmountLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
					.addContainerGap())
		);
		jPanel7Layout.setVerticalGroup(
			jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
					.addContainerGap()
					.addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
						.addComponent(totalAmountLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(jLabel8))
					.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
					.addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
						.addComponent(VatTotalLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(jLabel7))
					.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					.addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
						.addComponent(DiscountTotalLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(jLabel6))
					.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					.addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
						.addComponent(GrandTotalLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
					.addContainerGap())
		);

		javax.swing.GroupLayout Grn_item_areaLayout = new javax.swing.GroupLayout(Grn_item_area);
		Grn_item_area.setLayout(Grn_item_areaLayout);
		Grn_item_areaLayout.setHorizontalGroup(
			Grn_item_areaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(Grn_item_areaLayout.createSequentialGroup()
					.addContainerGap()
					.addGroup(Grn_item_areaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 633, Short.MAX_VALUE)
						.addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
					.addContainerGap())
		);
		Grn_item_areaLayout.setVerticalGroup(
			Grn_item_areaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(Grn_item_areaLayout.createSequentialGroup()
					.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
					.addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
					.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					.addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
					.addGap(32, 32, 32))
		);

		javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
		jPanel4.setLayout(jPanel4Layout);
		jPanel4Layout.setHorizontalGroup(
			jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(Logo_etc_area, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				.addGroup(jPanel4Layout.createSequentialGroup()
					.addComponent(Grn_item_area, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
					.addGap(0, 0, Short.MAX_VALUE))
		);
		jPanel4Layout.setVerticalGroup(
			jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel4Layout.createSequentialGroup()
					.addComponent(Logo_etc_area, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
					.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					.addComponent(Grn_item_area, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
					.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);

		javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
		jPanel3.setLayout(jPanel3Layout);
		jPanel3Layout.setHorizontalGroup(
			jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel3Layout.createSequentialGroup()
					.addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
					.addGap(0, 0, Short.MAX_VALUE))
		);
		jPanel3Layout.setVerticalGroup(
			jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
		);

		jPanel8.setBackground(new java.awt.Color(255, 255, 255));

		jPanel9.setBackground(new java.awt.Color(255, 255, 0));

		Num1Btn.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
		Num1Btn.setText("1");
		Num1Btn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				Num1BtnActionPerformed(evt);
			}
		});

		Num2Btn.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
		Num2Btn.setText("2");
		Num2Btn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				Num2BtnActionPerformed(evt);
			}
		});

		Num3Btn.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
		Num3Btn.setText("3");
		Num3Btn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				Num3BtnActionPerformed(evt);
			}
		});

		Num4Btn.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
		Num4Btn.setText("4");
		Num4Btn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				Num4BtnActionPerformed(evt);
			}
		});

		Num5Btn.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
		Num5Btn.setText("5");
		Num5Btn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				Num5BtnActionPerformed(evt);
			}
		});

		Num6Btn.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
		Num6Btn.setText("6");
		Num6Btn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				Num6BtnActionPerformed(evt);
			}
		});

		Num7Btn.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
		Num7Btn.setText("7");
		Num7Btn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				Num7BtnActionPerformed(evt);
			}
		});

		Num8Btn.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
		Num8Btn.setText("8");
		Num8Btn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				Num8BtnActionPerformed(evt);
			}
		});

		Num9Btn.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
		Num9Btn.setText("9");
		Num9Btn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				Num9BtnActionPerformed(evt);
			}
		});

		NumBackSpaceBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
		NumBackSpaceBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/keypad_erase.png"))); // NOI18N
		NumBackSpaceBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				NumBackSpaceBtnActionPerformed(evt);
			}
		});

		Num0Btn.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
		Num0Btn.setText("0");
		Num0Btn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				Num0BtnActionPerformed(evt);
			}
		});

		NumEnterBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
		NumEnterBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/keypad_enter.png"))); // NOI18N
		NumEnterBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				NumEnterBtnActionPerformed(evt);
			}
		});

		DataAddValueField.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
		DataAddValueField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
		DataAddValueField.setText("0");
		DataAddValueField.setPreferredSize(new java.awt.Dimension(19, 38));

		DataAddTypeLbl.setBackground(new java.awt.Color(255, 255, 255));
		DataAddTypeLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
		DataAddTypeLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		DataAddTypeLbl.setText("Option");

		NumDotBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
		NumDotBtn.setText(".");
		NumDotBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				NumDotBtnActionPerformed(evt);
			}
		});

		NumCBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
		NumCBtn.setText("C");
		NumCBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				NumCBtnActionPerformed(evt);
			}
		});

		discountByItemBox.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
		discountByItemBox.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
		discountByItemBox.setText("0");
		discountByItemBox.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

		jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
		jLabel4.setText("Discount");

		javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
		jPanel9.setLayout(jPanel9Layout);
		jPanel9Layout.setHorizontalGroup(
			jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
					.addContainerGap(14, Short.MAX_VALUE)
					.addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
						.addGroup(jPanel9Layout.createSequentialGroup()
							.addComponent(DataAddTypeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
							.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
							.addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
							.addGroup(jPanel9Layout.createSequentialGroup()
								.addComponent(Num4Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(Num5Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(Num6Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
							.addGroup(jPanel9Layout.createSequentialGroup()
								.addComponent(Num7Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(Num8Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(Num9Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
							.addGroup(jPanel9Layout.createSequentialGroup()
								.addComponent(NumBackSpaceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(Num0Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(NumEnterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
							.addGroup(jPanel9Layout.createSequentialGroup()
								.addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
									.addGroup(jPanel9Layout.createSequentialGroup()
										.addComponent(NumCBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(NumDotBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(DataAddValueField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
									.addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel9Layout.createSequentialGroup()
										.addComponent(Num1Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(Num2Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
									.addComponent(Num3Btn, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
									.addComponent(discountByItemBox)))))
					.addContainerGap())
		);
		jPanel9Layout.setVerticalGroup(
			jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
					.addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
						.addComponent(DataAddTypeLbl)
						.addComponent(jLabel4))
					.addGap(0, 0, Short.MAX_VALUE)
					.addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
						.addComponent(NumCBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(NumDotBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(discountByItemBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(DataAddValueField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
					.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					.addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
						.addComponent(Num1Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(Num2Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(Num3Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
					.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					.addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
						.addComponent(Num4Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(Num5Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(Num6Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
					.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					.addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
						.addComponent(Num7Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(Num8Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(Num9Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
					.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					.addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
						.addComponent(NumBackSpaceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(Num0Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(NumEnterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
					.addContainerGap())
		);

		jPanel10.setBackground(new java.awt.Color(255, 204, 0));

		GenarateInvoiceBtn.setBackground(new java.awt.Color(116, 170, 0));
		GenarateInvoiceBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 17)); // NOI18N
		GenarateInvoiceBtn.setForeground(new java.awt.Color(255, 255, 255));
		GenarateInvoiceBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/done.png"))); // NOI18N
		GenarateInvoiceBtn.setText("Genarate Invoice");
		GenarateInvoiceBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				GenarateInvoiceBtnActionPerformed(evt);
			}
		});

		ItemRemoveBtn.setBackground(new java.awt.Color(234, 64, 47));
		ItemRemoveBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 17)); // NOI18N
		ItemRemoveBtn.setForeground(new java.awt.Color(255, 255, 255));
		ItemRemoveBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/delete.png"))); // NOI18N
		ItemRemoveBtn.setText("Remove");
		ItemRemoveBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				ItemRemoveBtnActionPerformed(evt);
			}
		});

		jLabel2.setBackground(new java.awt.Color(255, 255, 255));
		jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 15)); // NOI18N
		jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel2.setText("Invoice Options");

		BackBtn.setBackground(new java.awt.Color(255, 0, 0));
		BackBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 17)); // NOI18N
		BackBtn.setForeground(new java.awt.Color(255, 255, 255));
		BackBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/clear.png"))); // NOI18N
		BackBtn.setText("Cancel");
		BackBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				BackBtnActionPerformed(evt);
			}
		});

		AddProductBtn.setBackground(new java.awt.Color(87, 62, 225));
		AddProductBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 17)); // NOI18N
		AddProductBtn.setForeground(new java.awt.Color(255, 255, 255));
		AddProductBtn.setText("Add Products");
		AddProductBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				AddProductBtnActionPerformed(evt);
			}
		});

		VatBtn.setBackground(new java.awt.Color(45, 88, 114));
		VatBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 17)); // NOI18N
		VatBtn.setForeground(new java.awt.Color(255, 255, 255));
		VatBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/tax.png"))); // NOI18N
		VatBtn.setText("Vat");
		VatBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				VatBtnActionPerformed(evt);
			}
		});

		KeyboardOpenBtn.setBackground(new java.awt.Color(100, 106, 116));
		KeyboardOpenBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 17)); // NOI18N
		KeyboardOpenBtn.setForeground(new java.awt.Color(255, 255, 255));
		KeyboardOpenBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/keyboard.png"))); // NOI18N
		KeyboardOpenBtn.setText("KeyBoard");
		KeyboardOpenBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				KeyboardOpenBtnActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
		jPanel10.setLayout(jPanel10Layout);
		jPanel10Layout.setHorizontalGroup(
			jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel10Layout.createSequentialGroup()
					.addContainerGap()
					.addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addComponent(KeyboardOpenBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(GenarateInvoiceBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addGroup(jPanel10Layout.createSequentialGroup()
							.addComponent(ItemRemoveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
							.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
							.addComponent(BackBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE))
						.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
							.addComponent(AddProductBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
							.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
							.addComponent(VatBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
					.addContainerGap())
		);
		jPanel10Layout.setVerticalGroup(
			jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
					.addContainerGap()
					.addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
					.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					.addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addComponent(AddProductBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(VatBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
					.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					.addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addComponent(ItemRemoveBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(BackBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
					.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					.addComponent(KeyboardOpenBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
					.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					.addComponent(GenarateInvoiceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
					.addContainerGap())
		);

		ltsPriceBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
		ltsPriceBtn.setText("0.00");
		ltsPriceBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				setLatestPrice(evt);
			}
		});

		jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
		jLabel5.setText("Latest Price");

		javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
		jPanel8.setLayout(jPanel8Layout);
		jPanel8Layout.setHorizontalGroup(
			jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
					.addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
					.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					.addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
					.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					.addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(jPanel8Layout.createSequentialGroup()
							.addComponent(ltsPriceBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
							.addContainerGap())
						.addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)))
		);
		jPanel8Layout.setVerticalGroup(
			jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
					.addGap(0, 0, Short.MAX_VALUE)
					.addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
						.addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
				.addGroup(jPanel8Layout.createSequentialGroup()
					.addGap(9, 9, 9)
					.addComponent(jLabel5)
					.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					.addComponent(ltsPriceBtn)
					.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout.setHorizontalGroup(
			jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel2Layout.createSequentialGroup()
					.addContainerGap()
					.addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
					.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
					.addContainerGap(24, Short.MAX_VALUE))
		);
		jPanel2Layout.setVerticalGroup(
			jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel2Layout.createSequentialGroup()
					.addContainerGap()
					.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGroup(jPanel2Layout.createSequentialGroup()
							.addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
							.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
							.addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
					.addContainerGap(157, Short.MAX_VALUE))
		);

		jScrollPane1.setViewportView(jPanel2);

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(
			jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup()
					.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1487, javax.swing.GroupLayout.PREFERRED_SIZE)
					.addGap(0, 0, Short.MAX_VALUE))
		);
		jPanel1Layout.setVerticalGroup(
			jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 786, Short.MAX_VALUE)
		);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
			layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		);
		layout.setVerticalGroup(
			layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		);

		pack();
		setLocationRelativeTo(null);
	}// </editor-fold>//GEN-END:initComponents

	private void SearchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchFieldActionPerformed
		SearchBtn.doClick();
	}//GEN-LAST:event_SearchFieldActionPerformed

	private void SearchProductTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchProductTblMouseClicked
		ltsBtnStatus = false;
		selectedLtsPrice = "0";
		DataAddValueField.setText("");
		discountByItemBox.setText("0");
		String productQ = (String) SearchProductTbl.getValueAt(SearchProductTbl.getSelectedRow(), 3);
		String unit = productQ.substring(productQ.indexOf(" ") + 1);
		String prodNo = (String) SearchProductTbl.getValueAt(SearchProductTbl.getSelectedRow(), 1);
		System.out.println(prodNo);
		DataAddTypeLbl.setText("Item");
		DataAddValueField.requestFocus();
		//new InvoiceProductDialog(null, pressed, productnumber).setVisible(true);

		try {
			JSONObject jo = ServerController.getJsonObject(WebServiceController.GET_LATEST_PRICE, ServerController.getLatestPrice(prodNo));
			if (jo != null) {
				if (jo.getBoolean("result")) {
					ltsPriceBtn.setText(jo.getString("data"));
				} else {
					System.out.println("error");
				}
			}

		} catch (Exception e) {
			e.printStackTrace();
		}


	}//GEN-LAST:event_SearchProductTblMouseClicked

	private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed
		//searchData();

		try {
			String SearchName = SearchField.getText();
			JSONObject jo = ServerController.getJsonObject(WebServiceController.DOWNLOAD_SEARCH_PRODUCTS, ServerController.getSearchProductsParams(SearchName));
			if (jo != null) {
				if (jo.getBoolean("result")) {

					JSONArray array = jo.getJSONArray("data");

					for (int i = 0; i < array.length(); i++) {

						JSONObject pd = array.getJSONObject(i);

						int ProductId = pd.getInt("ProductId");
						String ProductName = pd.getString("ProductName");
						String ProductLocation = pd.getString("ProductLocation");
						String ProductNumber = pd.getString("ProductNumber");
						String ProductDetails = pd.getString("ProductDetails");
						Double ProductCost = pd.getDouble("ProductCost");
						Double ProductSelling = pd.getDouble("ProductSelling");
						Double latestPrice = pd.getDouble("latestPrice");
						//int CountView = pd.getInt("CountView");
						//Double ProductQty = pd.getDouble("ProductQty");
						String pQty = pd.getDouble("ProductQty") + " " + pd.getString("ProductType");


						Vector v = new Vector();
						v.add(ProductName);
						v.add(ProductNumber);
						v.add(ProductLocation);
						v.add(pQty);
						v.add(df2.format(ProductSelling));
						v.add(ProductId);

						dtm.addRow(v);
					}

					DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
					rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
					SearchProductTbl.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);


				} else {
					System.out.println("error");
				}

			}

		} catch (Exception e) {
			e.printStackTrace();
		}
	}//GEN-LAST:event_SearchBtnActionPerformed

	private void ClearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearBtnActionPerformed
		//dtm.setRowCount(0);
		searchData();
		SearchField.setText("");
	}//GEN-LAST:event_ClearBtnActionPerformed

	private void KeyboardOpenBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KeyboardOpenBtnActionPerformed
		try {
			Runtime.getRuntime().exec("cmd /c osk");
		} catch (IOException ex) {
			Logger.getLogger(Invoice.class.getName()).log(Level.SEVERE, null, ex);
		}
	}//GEN-LAST:event_KeyboardOpenBtnActionPerformed

	private void Num1BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Num1BtnActionPerformed
		DataAddValueField.requestFocus();
		DataAddValueField.setText(DataAddValueField.getText() + "1");
	}//GEN-LAST:event_Num1BtnActionPerformed

	private void Num2BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Num2BtnActionPerformed
		DataAddValueField.setText(DataAddValueField.getText() + "2");
	}//GEN-LAST:event_Num2BtnActionPerformed

	private void Num3BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Num3BtnActionPerformed
		DataAddValueField.setText(DataAddValueField.getText() + "3");
	}//GEN-LAST:event_Num3BtnActionPerformed

	private void Num4BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Num4BtnActionPerformed
		DataAddValueField.setText(DataAddValueField.getText() + "4");
	}//GEN-LAST:event_Num4BtnActionPerformed

	private void Num5BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Num5BtnActionPerformed
		DataAddValueField.setText(DataAddValueField.getText() + "5");
	}//GEN-LAST:event_Num5BtnActionPerformed

	private void Num6BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Num6BtnActionPerformed
		DataAddValueField.setText(DataAddValueField.getText() + "6");
	}//GEN-LAST:event_Num6BtnActionPerformed

	private void Num7BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Num7BtnActionPerformed
		DataAddValueField.setText(DataAddValueField.getText() + "7");
	}//GEN-LAST:event_Num7BtnActionPerformed

	private void Num8BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Num8BtnActionPerformed
		DataAddValueField.setText(DataAddValueField.getText() + "8");
	}//GEN-LAST:event_Num8BtnActionPerformed

	private void Num9BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Num9BtnActionPerformed
		DataAddValueField.setText(DataAddValueField.getText() + "9");
	}//GEN-LAST:event_Num9BtnActionPerformed

	private void Num0BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Num0BtnActionPerformed
		DataAddValueField.setText(DataAddValueField.getText() + "0");
	}//GEN-LAST:event_Num0BtnActionPerformed

	private void NumBackSpaceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumBackSpaceBtnActionPerformed
		DataAddValueField.setText(DataAddValueField.getText().substring(0, DataAddValueField.getText().length() - 1));
	}//GEN-LAST:event_NumBackSpaceBtnActionPerformed

	private void NumEnterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumEnterBtnActionPerformed

		String DataType = DataAddTypeLbl.getText();

		if ("Item".equals(DataType)) {

			int productid = (int) SearchProductTbl.getValueAt(SearchProductTbl.getSelectedRow(), 5);
			String productSellPrice = "";

			if (ltsBtnStatus) {
				productSellPrice = ltsPriceBtn.getText();
			} else {
				String cleanPrice = (String) SearchProductTbl.getValueAt(SearchProductTbl.getSelectedRow(), 4);
				productSellPrice = cleanPrice.replace(",", "").split("\\.")[0];
			}


			if (productid == 0 & DataAddValueField.getText().isEmpty()) {
				JOptionPane.showMessageDialog(this, "Please fill the requered(*)  area.");
			} else {

				String DataValue = DataAddValueField.getText();
				String itemDiscount = discountByItemBox.getText();
				String UserId = String.valueOf(cache.LogUserId);


				if (itemDiscount.isEmpty()) {
					itemDiscount = "0";
				}

				if ("0".equals(DataValue)) {
					JOptionPane.showMessageDialog(null, "Please enter valid number.");
				} else {
					try {
						JSONObject jo = ServerController.getJsonObject(WebServiceController.ADD_ITEM_TO_CART, ServerController.sendItemAddToCartDataParams(invoiceId, UserId, productid, DataValue, itemDiscount, productSellPrice, "AddToCart"));

						if (jo != null) {
							if (jo.getBoolean("result")) {
								LoadInvoiceData();
								searchData();
								DataAddValueField.setText("");
								SearchField.requestFocus();
								DataAddTypeLbl.setText("");
								discountByItemBox.setText("0");
								DataType = "completed";
								System.out.println("==========================");
								System.out.println(jo.getString("msg"));
							} else {
								int response = JOptionPane.showConfirmDialog(this, jo.getString("msg"), "Error", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
								System.out.println("==========================");
								System.out.println(jo.getString("msg"));

								if (response == JOptionPane.YES_OPTION) {
									System.out.println("==========================");
									System.out.println("User clicked Yes to add stock.");

									JSONObject joAddingStock = ServerController.getJsonObject(WebServiceController.ADD_ITEM_TO_CART, ServerController.sendItemAddToCartDataParams(invoiceId, UserId, productid, DataValue, itemDiscount, productSellPrice, "AddingStock"));

									if (joAddingStock != null && joAddingStock.getBoolean("result")) {
										LoadInvoiceData();
										searchData();
										DataAddValueField.setText("");
										SearchField.requestFocus();
										DataAddTypeLbl.setText("");
										discountByItemBox.setText("0");
										DataType = "completed";
										JOptionPane.showMessageDialog(this, joAddingStock.getString("msg"));
									} else if (joAddingStock != null) {
										JOptionPane.showMessageDialog(this, joAddingStock.getString("msg"));
									}
								} else if (response == JOptionPane.NO_OPTION) {
									System.out.println("User clicked No.");
								}
							}
						}
					} catch (Exception e) {
						e.printStackTrace();
					}

				}


			}


		} else if ("AItem".equals(DataType)) {

			int PriceBatchId = (int) InvoiceItemTable.getValueAt(InvoiceItemTable.getSelectedRow(), 6);
			int InvoiceProductId = (int) InvoiceItemTable.getValueAt(InvoiceItemTable.getSelectedRow(), 7);
			Double InvoiceProductQty = (Double) InvoiceItemTable.getValueAt(InvoiceItemTable.getSelectedRow(), 2);
			Double newDiscount = Double.parseDouble(discountByItemBox.getText());


			if (PriceBatchId == 0 & InvoiceProductId == 0 & DataAddValueField.getText().isEmpty()) {
				JOptionPane.showMessageDialog(this, "Please fill the requered(*)  area.");
			} else {

				String DataValue = DataAddValueField.getText();

				String UserId = String.valueOf(cache.LogUserId);

				if ("0".equals(DataValue)) {
					JOptionPane.showMessageDialog(null, "Please enter valid number.");
				} else {
					try {
						JSONObject jo = ServerController.getJsonObject(WebServiceController.UPDATE_ITEM_QTY, ServerController.sendUpdateItemCartDataParams(invoiceId, PriceBatchId, InvoiceProductId, InvoiceProductQty, newDiscount, DataValue, UserId));
						if (jo != null) {

							if (jo.getBoolean("result")) {

								LoadInvoiceData();
								searchData();
								DataAddValueField.setText("");
								SearchField.requestFocus();
								DataAddTypeLbl.setText("");
								discountByItemBox.setText("0");


							} else {
								System.out.println("error");
								JOptionPane.showMessageDialog(this, "Error adding item to invoice cart.");
							}

						}

					} catch (Exception e) {
						e.printStackTrace();
					}
				}


			}


		} else if ("Discount".equals(DataType)) {

			try {

				String DataValue = DataAddValueField.getText();

				JSONObject jo = ServerController.getJsonObject(WebServiceController.UPDATE_DISCOUNT_INVOICE, ServerController.sendDiscountInvoiceParams(invoiceId, DataValue));
				if (jo != null) {

					if (jo.getBoolean("result")) {

						LoadInvoiceData();
						DataAddValueField.setText("");
						SearchField.requestFocus();
						DataAddTypeLbl.setText("");

					} else {
						System.out.println("error");
						JOptionPane.showMessageDialog(this, "Error updating discount.");
					}

				}

			} catch (Exception e) {
				e.printStackTrace();
			}

		} else if ("Vat".equals(DataType)) {

			try {

				String DataValue = DataAddValueField.getText();

				JSONObject jo = ServerController.getJsonObject(WebServiceController.UPDATE_VAT_INVOICE, ServerController.sendVatInvoiceParams(invoiceId, DataValue));
				if (jo != null) {

					if (jo.getBoolean("result")) {

						LoadInvoiceData();
						DataAddValueField.setText("");
						SearchField.requestFocus();
						DataAddTypeLbl.setText("");

					} else {
						System.out.println("error");
						JOptionPane.showMessageDialog(this, "Error updating vat.");
					}

				}

			} catch (Exception e) {
				e.printStackTrace();
			}

		} else {
			JOptionPane.showMessageDialog(null, "Wrong Command!");

		}

		ltsBtnStatus = false;
		selectedLtsPrice = "0";
		ltsPriceBtn.setText("0.00");

	}//GEN-LAST:event_NumEnterBtnActionPerformed

	private void BackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtnActionPerformed

		try {
			JSONObject jo = ServerController.getJsonObject(WebServiceController.DELETE_INVOICE_DATA, ServerController.deleteInvoice(invoiceId));
			if (jo != null) {

				if (jo.getBoolean("result")) {
					System.out.println(jo.getString("data"));
					this.dispose();

				} else {
					System.out.println("error");
					System.out.println(jo.getString("data"));
					JOptionPane.showMessageDialog(this, "Error adding item to invoice cart.");
				}

			}
		} catch (Exception e) {
			e.printStackTrace();
		}


	}//GEN-LAST:event_BackBtnActionPerformed

	private void InvoiceItemTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InvoiceItemTableMouseClicked
		DataAddValueField.setText("");
//        int PriceBatchId = (int) InvoiceItemTable.getValueAt(InvoiceItemTable.getSelectedRow(), 5);
//        int InvoiceProductId = (int) InvoiceItemTable.getValueAt(InvoiceItemTable.getSelectedRow(), 6);
		Double InvoiceProductQty = (Double) InvoiceItemTable.getValueAt(InvoiceItemTable.getSelectedRow(), 2);
		DataAddTypeLbl.setText("AItem");
		DataAddValueField.setText(InvoiceProductQty + "");
		DataAddValueField.requestFocus();
		String res = (String) InvoiceItemTable.getValueAt(InvoiceItemTable.getSelectedRow(), 1);
		String inItemName = res.substring(0, res.lastIndexOf(" (UM"));
		JSONObject disc = ServerController.getJsonObject(WebServiceController.GET_INVOICE_DISCOUNT, ServerController.getItemDiscount(inItemName));
		JSONArray dataArray = disc.getJSONArray("data"); // Get the 'data' array
		JSONObject firstObject = dataArray.getJSONObject(0); // Get the first object in the 'data' array
		String discountPrice = firstObject.getString("discountPrice"); // Extract the 'discountPrice' field
		discountByItemBox.setText(discountPrice);
	}//GEN-LAST:event_InvoiceItemTableMouseClicked

	private void ItemRemoveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemRemoveBtnActionPerformed

		int PriceBatchId = (int) InvoiceItemTable.getValueAt(InvoiceItemTable.getSelectedRow(), 6);
		int InvoiceProductId = (int) InvoiceItemTable.getValueAt(InvoiceItemTable.getSelectedRow(), 7);
		Double InvoiceProductQty = (Double) InvoiceItemTable.getValueAt(InvoiceItemTable.getSelectedRow(), 2);

		if (PriceBatchId == 0 & InvoiceProductId == 0 & DataAddValueField.getText().isEmpty()) {
			JOptionPane.showMessageDialog(this, "Please select invoice table.");
		} else {

			int confirmRemoveLabour = JOptionPane.showConfirmDialog(rootPane, "Are you sure to remove this item?", "Confirm", JOptionPane.YES_NO_OPTION);
			if (confirmRemoveLabour == 0) {

				String DataType = DataAddTypeLbl.getText();

				if ("AItem".equals(DataType)) {

					try {
						JSONObject jo = ServerController.getJsonObject(WebServiceController.REMOVE_ITEM_QTY, ServerController.sendRemoveItemCartDataParams(invoiceId, PriceBatchId, InvoiceProductId, InvoiceProductQty));
						if (jo != null) {

							if (jo.getBoolean("result")) {

								LoadInvoiceData();
								searchData();
								DataAddValueField.setText("");
								SearchField.requestFocus();
								DataAddTypeLbl.setText("");
								System.out.println(jo.getString("msg"));

							} else {
								System.out.println("error");
								System.out.println(jo.getString("msg"));
								JOptionPane.showMessageDialog(this, "Error adding item to invoice cart.");
							}

						}

					} catch (Exception e) {
						e.printStackTrace();
					}

				} else {
					JOptionPane.showMessageDialog(null, "Wrong Command!");
				}

			}


		}

		LoadInvoiceData();
	}//GEN-LAST:event_ItemRemoveBtnActionPerformed

	private void AddProductBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddProductBtnActionPerformed

		JDialog dialog = new JDialog(this, "Enter Product Details", true);
		dialog.setSize(450, 200);
		dialog.setLayout(new BorderLayout());
		dialog.setLocationRelativeTo(this);

		JPanel inputPanel = new JPanel(new GridLayout(3, 2, 10, 10));

		JLabel nameLabel = new JLabel("Product Name:");
		nameLabel.setBorder(new EmptyBorder(5, 5, 5, 5));

		JTextField productNameField = new JTextField(15);
		productNameField.setBorder(new CompoundBorder(
			new LineBorder(Color.GRAY, 1, true),
			new EmptyBorder(5, 5, 5, 15)));


		JLabel priceLabel = new JLabel("Selling Price:");
		priceLabel.setBorder(new EmptyBorder(5, 5, 5, 5));

		JTextField sellingPriceField = new JTextField(15);
		sellingPriceField.setBorder(new CompoundBorder(
			new LineBorder(Color.GRAY, 1, true),
			new EmptyBorder(5, 5, 5, 15)));

		inputPanel.add(nameLabel);
		inputPanel.add(productNameField);
		inputPanel.add(priceLabel);
		inputPanel.add(sellingPriceField);

		JPanel buttonPanel = new JPanel();
		JButton doneButton = new JButton("Done");
		JButton cancelButton = new JButton("Cancel");
		buttonPanel.add(doneButton);
		buttonPanel.add(cancelButton);

		dialog.add(inputPanel, BorderLayout.CENTER);
		dialog.add(buttonPanel, BorderLayout.SOUTH);

		doneButton.addActionListener(e -> {
			String productName = productNameField.getText().trim();
			String sellingPriceInput = sellingPriceField.getText().trim();

			if (!productName.isEmpty() && !sellingPriceInput.isEmpty()) {
				try {

					JSONObject jo = ServerController.getJsonObject(WebServiceController.ADD_PRODUCT_DETAILS, ServerController.saveTempProductData(productName, sellingPriceInput));

					if (jo != null && jo.getBoolean("result")) {
						LoadInvoiceData();
						searchData();
						DataAddValueField.setText("");
						SearchField.requestFocus();
						DataAddTypeLbl.setText("");
						discountByItemBox.setText("0");

						JOptionPane.showMessageDialog(this, jo.getString("msg"));
					} else if (jo != null) {
						JOptionPane.showMessageDialog(this, jo.getString("msg"));
					}

					// Close dialog after successful addition
					dialog.dispose();
				} catch (NumberFormatException ex) {
					JOptionPane.showMessageDialog(dialog, "Please enter valid numbers for quantity and selling price.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
				} catch (Exception ex) {
					ex.printStackTrace();
				}
			} else {
				JOptionPane.showMessageDialog(dialog, "All fields must be filled.", "Input Error", JOptionPane.WARNING_MESSAGE);
			}
		});

		cancelButton.addActionListener(e -> dialog.dispose());

		// Show the dialog
		dialog.setVisible(true);

	}//GEN-LAST:event_AddProductBtnActionPerformed

	private void VatBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VatBtnActionPerformed
		DataAddTypeLbl.setText("Vat");
		DataAddValueField.setText(VatPrice + "");
		DataAddValueField.requestFocus();
	}//GEN-LAST:event_VatBtnActionPerformed

	private void NumDotBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumDotBtnActionPerformed
		DataAddValueField.setText(DataAddValueField.getText() + ".");
	}//GEN-LAST:event_NumDotBtnActionPerformed

	private void NumCBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumCBtnActionPerformed
		DataAddValueField.setText("");
	}//GEN-LAST:event_NumCBtnActionPerformed

	private void GenarateInvoiceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenarateInvoiceBtnActionPerformed

//        int confirmRemoveLabour = JOptionPane.showConfirmDialog(rootPane, "Are you sure to save this invoice?", "Confirm",JOptionPane.YES_NO_OPTION);
//            if(confirmRemoveLabour == 0){
//
//                String UserId = String.valueOf(cache.LogUserId);

		new CreateRecept(null, pressed, invoiceId, GTotal - GDiscount).setVisible(true);


//                try {
//                    JSONObject jo = ServerController.getJsonObject(WebServiceController.SAVE_INVOICE_DETAILS, ServerController.sendSaveInvoiceParams(invoiceId,UserId));
//                if(jo != null){
//
//                    if(jo.getBoolean("result")){
//
//                      //JSONArray array = jo.getJSONArray("msg");
//
//                        JOptionPane.showMessageDialog(this, "Invoice save successfully.");
//                        //Home.showPanel(clientList1);
//                        new InvoiceViewDialogNew(null, pressed, invoiceId).setVisible(true);
//                        this.dispose();
//
//                    }else{
//                        System.out.println("error");
//                        JOptionPane.showMessageDialog(this, "Error saving invoice.");
//                    }
//
//                }
//
//
//
//                } catch (Exception e) {
//                    e.printStackTrace();
//                }

		// }


	}//GEN-LAST:event_GenarateInvoiceBtnActionPerformed

	private void setLatestPrice(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setLatestPrice
		ltsBtnStatus = true;
		selectedLtsPrice = ltsPriceBtn.getText();
		System.out.println("button value...............");
		System.out.println(selectedLtsPrice);
	}//GEN-LAST:event_setLatestPrice

	/**
	 * @param args the command line arguments
	 */
	public static void main(String[] args) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */

//		try {
//			javax.swing.UIManager.setLookAndFeel(new FlatMacLightLaf());
//		} catch (Exception ex) {
//			ex.printStackTrace();
//		}
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Windows".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new Invoice(0).setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton AddProductBtn;
	private javax.swing.JButton BackBtn;
	private javax.swing.JButton ClearBtn;
	private javax.swing.JLabel ClientNameLbl;
	private javax.swing.JLabel DataAddTypeLbl;
	private javax.swing.JTextField DataAddValueField;
	private javax.swing.JLabel DiscountTotalLbl;
	private javax.swing.JButton GenarateInvoiceBtn;
	private javax.swing.JLabel GrandTotalLbl;
	private javax.swing.JPanel Grn_item_area;
	private javax.swing.JLabel InvoiceDateLbl;
	private javax.swing.JTable InvoiceItemTable;
	private javax.swing.JLabel InvoiceNumberLbl;
	private javax.swing.JButton ItemRemoveBtn;
	private javax.swing.JButton KeyboardOpenBtn;
	private javax.swing.JPanel Logo_etc_area;
	private javax.swing.JButton Num0Btn;
	private javax.swing.JButton Num1Btn;
	private javax.swing.JButton Num2Btn;
	private javax.swing.JButton Num3Btn;
	private javax.swing.JButton Num4Btn;
	private javax.swing.JButton Num5Btn;
	private javax.swing.JButton Num6Btn;
	private javax.swing.JButton Num7Btn;
	private javax.swing.JButton Num8Btn;
	private javax.swing.JButton Num9Btn;
	private javax.swing.JButton NumBackSpaceBtn;
	private javax.swing.JButton NumCBtn;
	private javax.swing.JButton NumDotBtn;
	private javax.swing.JButton NumEnterBtn;
	private javax.swing.JButton SearchBtn;
	private static javax.swing.JTextField SearchField;
	private static javax.swing.JTable SearchProductTbl;
	private javax.swing.JButton VatBtn;
	private javax.swing.JLabel VatTotalLbl;
	private javax.swing.JTextField discountByItemBox;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JLabel jLabel8;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel10;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JPanel jPanel3;
	private javax.swing.JPanel jPanel4;
	private javax.swing.JPanel jPanel5;
	private javax.swing.JPanel jPanel6;
	private javax.swing.JPanel jPanel7;
	private javax.swing.JPanel jPanel8;
	private javax.swing.JPanel jPanel9;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JScrollPane jScrollPane3;
	private javax.swing.JToolBar jToolBar1;
	private javax.swing.JButton ltsPriceBtn;
	private javax.swing.JLabel totalAmountLbl;
	// End of variables declaration//GEN-END:variables
}
