/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Pages;


import Dialog.InvoiceViewDialog;
import Dialog.UpdateClientStatusDialog;
import Dialog.cache;
import static Pages.ClientsNav.clientsListPanel;
import smartretailer.Home;
import controllers.ServerController;
import controllers.WebServiceController;

import java.awt.GridLayout;
import java.text.DecimalFormat;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import org.json.JSONArray;
import org.json.JSONObject;

/**
 *
 * @author Oshan
 */

public class ClientProfile extends javax.swing.JPanel {

    /**
     * Creates new form ClientProfile
     */
    boolean pressed = false;
    private Thread clientdetailsThread;
    private String ClientId;

    private final DefaultTableModel itm;
    private Thread allinvoiceThread;

    private Thread clientrecordThread;

    static DecimalFormat df2 = new DecimalFormat( "#,###,###,##0.00" );


//    private void loadStatus(){
//        panel_cients_status.setLayout(new GridLayout(0,1));
//
//        for(int i=0 ;i<15 ;i++){
//
//            String name = "Name = "+i;
//
//            PanelClientsStatusView panel = new PanelClientsStatusView(name);
//
//            panel_cients_status.add(panel);
//            panel_cients_status.revalidate();
//
//
//        }
//    }


    private void loadSampleNotes(){

        clientrecordThread = new Thread(new Runnable() {
        @Override
        public void run() {

            try {
                 JSONObject jo = ServerController.getJsonObject(WebServiceController.DOWNLOAD_CLIENT_RECORDES, ServerController.getClientRecordsParams(ClientId));
            if(jo != null){

                if(jo.getBoolean("result")){

                    JSONArray array = jo.getJSONArray("data");

                    panel_clients_notes.setLayout(new GridLayout(0,1));
                    panel_clients_notes.removeAll();

                    for(int i = 0; i<array.length() ;i++){

                            JSONObject pd = array.getJSONObject(i);

                            int ClientRID = pd.getInt("ClientRecordId");
                            String ClientRecord = pd.getString("Record");
                            String ClientRecordDateTime = pd.getString("RecordDateTime");


                            panel_clients_notes.revalidate();

                            /////

                    }



                }else{
                    System.out.println("error");
                }

            }





            } catch (Exception e) {
                e.printStackTrace();
            }


        }

        });


        clientrecordThread.start();




    }



    public void loadProfile(String clientId){

        System.out.println("loading "+clientId);

        this.ClientId = clientId;
        LoadClientsData(clientId);
        LoadInvoiceData(clientId);

        loadSampleNotes();
        //loadStatus();
    }




    public ClientProfile() {
        initComponents();

        String ClientId = ClientId_.getText();
        this.ClientId = ClientId;


        itm = (DefaultTableModel) InvoiceHistoryTbl.getModel();
//        LoadClientsData("");

        AgeField.setEditable(false);
        ClientRegDateField.setEditable(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        ClientId_ = new javax.swing.JLabel();
        BackBtn = new javax.swing.JButton();
        ClientDisplayDetailsArea = new javax.swing.JPanel();
        ClientImgLbl = new javax.swing.JLabel();
        ClientNameLbl = new javax.swing.JLabel();
        ClientEmailLbl = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ClientRecordCountLbl = new javax.swing.JLabel();
        ClientInvoiceCountLbl = new javax.swing.JLabel();
        DeactivateBtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        UpdateStatusBtn = new javax.swing.JButton();
        sp_status = new javax.swing.JScrollPane();
        panel_cients_status = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        RecordTypeField = new javax.swing.JTextArea();
        AddRecordBtn = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        sp_notes = new javax.swing.JScrollPane();
        panel_clients_notes = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        ClientFNameField = new javax.swing.JTextField();
        NICField = new javax.swing.JTextField();
        EmailField = new javax.swing.JTextField();
        ContactNumberField = new javax.swing.JTextField();
        AgeField = new javax.swing.JTextField();
        AddressField = new javax.swing.JTextField();
        ClientCatField = new javax.swing.JTextField();
        ClientRegDateField = new javax.swing.JTextField();
        JobDesignationField = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        WorkPlaceField = new javax.swing.JTextField();
        WorkAddressField = new javax.swing.JTextField();
        ClientDeatilsUpdateBtn = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        ClientLNameField = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        InvoiceHistoryTbl = new javax.swing.JTable();

        setPreferredSize(new java.awt.Dimension(1162, 810));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1162, 810));

        BackBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 15)); // NOI18N
        BackBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/back.png"))); // NOI18N
        BackBtn.setText("Back");
        BackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtnActionPerformed(evt);
            }
        });

        ClientDisplayDetailsArea.setBackground(new java.awt.Color(204, 204, 255));

        ClientImgLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/profile.png"))); // NOI18N

        ClientNameLbl.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        ClientNameLbl.setText("Client Name");

        ClientEmailLbl.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        ClientEmailLbl.setText("Client Email");

        javax.swing.GroupLayout ClientDisplayDetailsAreaLayout = new javax.swing.GroupLayout(ClientDisplayDetailsArea);
        ClientDisplayDetailsArea.setLayout(ClientDisplayDetailsAreaLayout);
        ClientDisplayDetailsAreaLayout.setHorizontalGroup(
            ClientDisplayDetailsAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ClientDisplayDetailsAreaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ClientImgLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ClientDisplayDetailsAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ClientEmailLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ClientNameLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        ClientDisplayDetailsAreaLayout.setVerticalGroup(
            ClientDisplayDetailsAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ClientDisplayDetailsAreaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ClientDisplayDetailsAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(ClientDisplayDetailsAreaLayout.createSequentialGroup()
                        .addComponent(ClientNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ClientEmailLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ClientImgLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Recordes");

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Invoices");
        jLabel2.setPreferredSize(new java.awt.Dimension(169, 19));

        ClientRecordCountLbl.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        ClientRecordCountLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ClientRecordCountLbl.setText("0");

        ClientInvoiceCountLbl.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        ClientInvoiceCountLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ClientInvoiceCountLbl.setText("0");
        ClientInvoiceCountLbl.setPreferredSize(new java.awt.Dimension(169, 19));

        DeactivateBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/delete.png"))); // NOI18N
        DeactivateBtn.setText("Deactivate");

        jLabel5.setText("Track");

        UpdateStatusBtn.setText("Update Status");
        UpdateStatusBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateStatusBtnActionPerformed(evt);
            }
        });

        panel_cients_status.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout panel_cients_statusLayout = new javax.swing.GroupLayout(panel_cients_status);
        panel_cients_status.setLayout(panel_cients_statusLayout);
        panel_cients_statusLayout.setHorizontalGroup(
            panel_cients_statusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 351, Short.MAX_VALUE)
        );
        panel_cients_statusLayout.setVerticalGroup(
            panel_cients_statusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 446, Short.MAX_VALUE)
        );

        sp_status.setViewportView(panel_cients_status);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(DeactivateBtn)
                .addGap(122, 122, 122))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sp_status)
                    .addComponent(jSeparator1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(ClientRecordCountLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ClientInvoiceCountLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(UpdateStatusBtn))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ClientRecordCountLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ClientInvoiceCountLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(DeactivateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UpdateStatusBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sp_status, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        RecordTypeField.setColumns(20);
        RecordTypeField.setRows(5);
        jScrollPane2.setViewportView(RecordTypeField);

        AddRecordBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/add.png"))); // NOI18N
        AddRecordBtn.setText("Add Record");
        AddRecordBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddRecordBtnActionPerformed(evt);
            }
        });

        panel_clients_notes.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout panel_clients_notesLayout = new javax.swing.GroupLayout(panel_clients_notes);
        panel_clients_notes.setLayout(panel_clients_notesLayout);
        panel_clients_notesLayout.setHorizontalGroup(
            panel_clients_notesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 752, Short.MAX_VALUE)
        );
        panel_clients_notesLayout.setVerticalGroup(
            panel_clients_notesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 410, Short.MAX_VALUE)
        );

        sp_notes.setViewportView(panel_clients_notes);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(AddRecordBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addComponent(sp_notes))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 1, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AddRecordBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sp_notes, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Records", jPanel4);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 1, 15)); // NOI18N
        jLabel6.setText("First Name");

        jLabel7.setFont(new java.awt.Font("Helvetica Neue", 1, 15)); // NOI18N
        jLabel7.setText("NIC / Passport");
        jLabel7.setToolTipText("");

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 1, 15)); // NOI18N
        jLabel8.setText("Email");
        jLabel8.setToolTipText("");

        jLabel9.setFont(new java.awt.Font("Helvetica Neue", 1, 15)); // NOI18N
        jLabel9.setText("Contact Number");
        jLabel9.setToolTipText("");

        jLabel10.setFont(new java.awt.Font("Helvetica Neue", 1, 15)); // NOI18N
        jLabel10.setText("Birtday (Age)");
        jLabel10.setToolTipText("");

        jLabel11.setFont(new java.awt.Font("Helvetica Neue", 1, 15)); // NOI18N
        jLabel11.setText("Address");
        jLabel11.setToolTipText("");

        jLabel12.setFont(new java.awt.Font("Helvetica Neue", 1, 15)); // NOI18N
        jLabel12.setText("Client Category");
        jLabel12.setToolTipText("");

        jLabel13.setFont(new java.awt.Font("Helvetica Neue", 1, 15)); // NOI18N
        jLabel13.setText("Job Designation");
        jLabel13.setToolTipText("");

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(153, 153, 255));
        jLabel14.setText("Personal Information");

        jLabel15.setFont(new java.awt.Font("Helvetica Neue", 1, 15)); // NOI18N
        jLabel15.setText("Register Date");
        jLabel15.setToolTipText("");

        jLabel16.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(153, 153, 255));
        jLabel16.setText("Job Information");

        jLabel17.setFont(new java.awt.Font("Helvetica Neue", 1, 15)); // NOI18N
        jLabel17.setText("Work Place Name");
        jLabel17.setToolTipText("");

        jLabel18.setFont(new java.awt.Font("Helvetica Neue", 1, 15)); // NOI18N
        jLabel18.setText("Work Place Address");
        jLabel18.setToolTipText("");

        ClientFNameField.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N

        NICField.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N

        EmailField.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N

        ContactNumberField.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N

        AgeField.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N

        AddressField.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N

        ClientCatField.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N

        ClientRegDateField.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N

        JobDesignationField.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N

        WorkPlaceField.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N

        WorkAddressField.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N

        ClientDeatilsUpdateBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/update.png"))); // NOI18N
        ClientDeatilsUpdateBtn.setText("Update");
        ClientDeatilsUpdateBtn.setPreferredSize(new java.awt.Dimension(78, 30));
        ClientDeatilsUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClientDeatilsUpdateBtnActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Helvetica Neue", 1, 15)); // NOI18N
        jLabel19.setText("Last Name");

        ClientLNameField.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3)
                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(ClientFNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ClientRegDateField, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(ClientCatField, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(AddressField, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(AgeField, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(ContactNumberField, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(EmailField, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(NICField)))))
                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(ClientDeatilsUpdateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(ClientLNameField))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(WorkAddressField, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                            .addComponent(JobDesignationField)
                            .addComponent(WorkPlaceField))))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ClientFNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ClientLNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NICField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EmailField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ContactNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AgeField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddressField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ClientCatField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ClientRegDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JobDesignationField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(WorkPlaceField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(WorkAddressField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ClientDeatilsUpdateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("About", jPanel5);

        InvoiceHistoryTbl.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        InvoiceHistoryTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Invoice Number", "Client Name", "Payment Status", "Invoice Date", "Invoice Price", "InvoiceId"
            }
        ) {
            final boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        InvoiceHistoryTbl.setRowHeight(25);
        InvoiceHistoryTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                InvoiceHistoryTblMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(InvoiceHistoryTbl);
        if (InvoiceHistoryTbl.getColumnModel().getColumnCount() > 0) {
            InvoiceHistoryTbl.getColumnModel().getColumn(5).setMinWidth(0);
            InvoiceHistoryTbl.getColumnModel().getColumn(5).setPreferredWidth(0);
            InvoiceHistoryTbl.getColumnModel().getColumn(5).setMaxWidth(0);
        }

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 618, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Invoices", jPanel6);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ClientDisplayDetailsArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(BackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ClientId_, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ClientId_, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ClientDisplayDetailsArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 810, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void LoadClientsData(String ClientId){
        //dtm.setRowCount(0);

        clientdetailsThread = new Thread(new Runnable() {
        @Override
        public void run() {

            try {
                 JSONObject jo = ServerController.getJsonObject(WebServiceController.DOWNLOAD_CLIENT_Details, ServerController.getClientDetailsParams(ClientId));
            if(jo != null){

                if(jo.getBoolean("result")){

                    JSONArray array = jo.getJSONArray("data");

                    for(int i = 0; i<array.length() ;i++){

                            JSONObject pd = array.getJSONObject(i);

                            String ClientDateTime = pd.getString("ClientDateTime");
                            String ClientFirstName = pd.getString("ClientFirstName");
                            String ClientLastName = pd.getString("ClientLastName");
                            String ClientNic = pd.getString("ClientNic");
                            String ClientEmail = pd.getString("ClientEmail");
                            String ClientContactNumber = pd.getString("ClientContactNumber");
                            String ClientAddress = pd.getString("ClientAddress");
                            String ClientCategory = pd.getString("ClientCat");
                            String ClientJobDesignation = pd.getString("ClientJobDesignation");
                            String ClientCompanyName = pd.getString("ClientCompanyName");
                            String ClientCompanyAddress = pd.getString("ClientCompanyAddress");
                            String ClientRecordCount = pd.getString("ClientRecordCount");
                            String ClientInvoiceCount = pd.getString("ClientInvoiceCount");


                            int ClientAge = pd.getInt("Age");

                            int ClientStat = Integer.parseInt(pd.getString("ClientStat"));

                            String ClientDisplayName = ClientFirstName+" "+ClientLastName;


//                            DateFormat pfm = new SimpleDateFormat("yyyy");
                            // DateFormat pfm = new SimpleDateFormat("yyyy-MM-dd");
                            // String ClientRegisterDate = pfm.format(ClientDateTime);

                            String ClientStatusDisplay = "";
                            if(ClientStat == 0){
                                ClientStatusDisplay = "Reject";
                            }else{
                                ClientStatusDisplay = "Complete";
                            }

                            ClientNameLbl.setText("SETTING DATA");


                            System.out.println("Display namae = "+ClientDisplayName);

                            ClientNameLbl.setText(ClientDisplayName);
                            ClientEmailLbl.setText(ClientEmail);
                            ClientRecordCountLbl.setText(ClientRecordCount);
                            ClientInvoiceCountLbl.setText(ClientInvoiceCount);

                            ////
                            ClientFNameField.setText(ClientFirstName);
                            ClientLNameField.setText(ClientLastName);
                            NICField.setText(ClientNic);
                            EmailField.setText(ClientEmail);
                            ContactNumberField.setText(ClientContactNumber);
                            AgeField.setText(ClientAge+"");
                            AddressField.setText(ClientAddress);
                            ClientCatField.setText(ClientCategory);
                            ClientRegDateField.setText(ClientDateTime);

                            ////
                            JobDesignationField.setText(ClientJobDesignation);
                            WorkPlaceField.setText(ClientCompanyName);
                            WorkAddressField.setText(ClientCompanyAddress);

                    }



                }else{
                    System.out.println("error");
                }

            }

            ///Get Track data
            if(jo != null){

                if(jo.getBoolean("result")){

                    JSONArray array = jo.getJSONArray("statusdata");

                    panel_cients_status.setLayout(new GridLayout(0,1));
                    panel_cients_status.removeAll();

                    for(int p = 0; p<array.length() ;p++){

                            JSONObject sd = array.getJSONObject(p);

                            int ClientStatusId = sd.getInt("ClientStatusId");
                            String StatusColor = sd.getString("StatusColor");
                            String StatusType = sd.getString("StatusType");
                            String StatusDateTime = sd.getString("StatusDateTime");

                            String ShowColor="";
                            if(StatusColor.equals("Primary")){
                                ShowColor = "blue";
                            }else if(StatusColor.equals("Green")){
                                ShowColor = "green";
                            }else if(StatusColor.equals("Pink")){
                                ShowColor = "pink";
                            }else if(StatusColor.equals("Yellow")){
                                ShowColor = "yellow";
                            }

                            panel_cients_status.revalidate();


                    }




                }else{
                    System.out.println("error");
                }

            }
            ///





            } catch (Exception e) {
                e.printStackTrace();
            }


        }

        });


        clientdetailsThread.start();

    }

    private void LoadInvoiceData(String ClientId){
        itm.setRowCount(0);

        allinvoiceThread = new Thread(new Runnable() {
        @Override
        public void run() {

            try {
                 JSONObject jo = ServerController.getJsonObject(WebServiceController.DOWNLOAD_CLIENT_INVOICE_LIST, ServerController.getClientInvoiceListParams(ClientId));
            if(jo != null){

                if(jo.getBoolean("result")){


                    JSONArray array = jo.getJSONArray("data");

                    for(int i = 0; i<array.length() ;i++){

                            JSONObject pd = array.getJSONObject(i);

                            int InvoiceSaveId = pd.getInt("InvoiceSaveId");
                            int InvoiceId = pd.getInt("InvoiceId");
                            int ClientId = pd.getInt("ClientId");
                            // Date ClientDateTime = Date.valueOf(pd.getString("ClientDateTime"));
                            String ClientName = pd.getString("ClientName");
                            String ClientAddress = pd.getString("ClientAddress");
                            String ClientEmail = pd.getString("ClientEmail");
                            String ClientContactNumber = pd.getString("ClientContactNumber");
                            String Note = pd.getString("Note");
                            Double SubTotal = pd.getDouble("SubTotal");
                            Double Vat = pd.getDouble("Vat");
                            Double Discount = pd.getDouble("Discount");
                            Double GrandTotal = pd.getDouble("GrandTotal");
                            Double ProductTotal = pd.getDouble("ProductTotal");
                            Double ServiceTotal = pd.getDouble("ServiceTotal");
                            String JobPersonId = pd.getString("JobPersonId");
                            int Pay = pd.getInt("Pay");
                            String Stat = pd.getString("Stat");
                            String InvoiceDateTime = pd.getString("InvoiceDateTime");

                            int InvoiceNumber = InvoiceId + 10000;

                            String PayType = "";
                            if(Pay == 9){
                                PayType="Credit";
                            }else{
                                PayType="Paid";
                            }


                            Vector v = new Vector();
                            v.add(InvoiceNumber);
                            v.add(ClientName);
                            v.add(PayType);
                            v.add(InvoiceDateTime);
                            v.add(df2.format(GrandTotal));
                            v.add(InvoiceId);

                            itm.addRow(v);

                    }

                    DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
                    rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
                    InvoiceHistoryTbl.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);



                }else{
                    System.out.println("error");
                }

            }

            } catch (Exception e) {
                e.printStackTrace();
            }


        }

        });


        allinvoiceThread.start();

    }

    private void BackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtnActionPerformed
        Home.showPanel(clientsListPanel);
    }//GEN-LAST:event_BackBtnActionPerformed

    private void InvoiceHistoryTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InvoiceHistoryTblMouseClicked

        int invoiceId = (int) InvoiceHistoryTbl.getValueAt(InvoiceHistoryTbl.getSelectedRow(), 5);
        System.out.println("invoice id selected - "+invoiceId);
        new InvoiceViewDialog(null, pressed, invoiceId).setVisible(true);
    }//GEN-LAST:event_InvoiceHistoryTblMouseClicked

    private void ClientDeatilsUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClientDeatilsUpdateBtnActionPerformed

        if(ClientFNameField.getText().isEmpty() & ContactNumberField.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Please fill the requered(*)  area.");
        }else{

                String FirstName = ClientFNameField.getText();
                String LastName = ClientLNameField.getText();

                String Nic = NICField.getText();
                String Email = EmailField.getText();
                String ContactNumber = ContactNumberField.getText();
                String ClientCat = ClientCatField.getText();
                String Address = AddressField.getText();


                String JobDesignation = JobDesignationField.getText();
                String WorkPlace = WorkPlaceField.getText();
                String WorkPlaceAddress = WorkAddressField.getText();

                String UserId = String.valueOf(cache.LogUserId);

                    try {
                         JSONObject jo = ServerController.getJsonObject(WebServiceController.UPDATE_CLIENT_DETAILS, ServerController.updateClientDetailsParams(ClientId,FirstName,LastName,Nic,Email,ContactNumber,ClientCat,Address,JobDesignation,WorkPlace,WorkPlaceAddress,UserId));
                    if(jo != null){

                        if(jo.getBoolean("result")){
                            //JSONArray array = jo.getJSONArray("msg");

                            JOptionPane.showMessageDialog(this, "Record added successfully Please Go to Client List.");

                        }else{
                            System.out.println("error");
                            JOptionPane.showMessageDialog(this, "Error adding client.");
                        }

                    }



                    } catch (Exception e) {
                        e.printStackTrace();
                    }


        }

    }//GEN-LAST:event_ClientDeatilsUpdateBtnActionPerformed

    private void UpdateStatusBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateStatusBtnActionPerformed
        new UpdateClientStatusDialog(null, pressed, ClientId).setVisible(true);
    }//GEN-LAST:event_UpdateStatusBtnActionPerformed

    private void AddRecordBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddRecordBtnActionPerformed

        if(RecordTypeField.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please fill the requered(*)  area.");
        }else{

                String ClientRecord = RecordTypeField.getText();

                String UserId = String.valueOf(cache.LogUserId);

                    try {
                         JSONObject jo = ServerController.getJsonObject(WebServiceController.ADD_CLIENT_RECORD, ServerController.addRecordsParams(ClientId,ClientRecord));
                    if(jo != null){

                        if(jo.getBoolean("result")){
                            //JSONArray array = jo.getJSONArray("msg");
                            loadSampleNotes();
                            JOptionPane.showMessageDialog(this, "Record added successfully.");

                        }else{
                            System.out.println("error");
                            JOptionPane.showMessageDialog(this, "Error adding record.");
                        }

                    }



                    } catch (Exception e) {
                        e.printStackTrace();
                    }


        }

    }//GEN-LAST:event_AddRecordBtnActionPerformed




    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddRecordBtn;
    private javax.swing.JTextField AddressField;
    private javax.swing.JTextField AgeField;
    private javax.swing.JButton BackBtn;
    private javax.swing.JTextField ClientCatField;
    private javax.swing.JButton ClientDeatilsUpdateBtn;
    private javax.swing.JPanel ClientDisplayDetailsArea;
    private javax.swing.JLabel ClientEmailLbl;
    private javax.swing.JTextField ClientFNameField;
    public static javax.swing.JLabel ClientId_;
    private javax.swing.JLabel ClientImgLbl;
    private javax.swing.JLabel ClientInvoiceCountLbl;
    private javax.swing.JTextField ClientLNameField;
    private javax.swing.JLabel ClientNameLbl;
    private javax.swing.JLabel ClientRecordCountLbl;
    private javax.swing.JTextField ClientRegDateField;
    private javax.swing.JTextField ContactNumberField;
    private javax.swing.JButton DeactivateBtn;
    private javax.swing.JTextField EmailField;
    private javax.swing.JTable InvoiceHistoryTbl;
    private javax.swing.JTextField JobDesignationField;
    private javax.swing.JTextField NICField;
    private javax.swing.JTextArea RecordTypeField;
    private javax.swing.JButton UpdateStatusBtn;
    private javax.swing.JTextField WorkAddressField;
    private javax.swing.JTextField WorkPlaceField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel panel_cients_status;
    private javax.swing.JPanel panel_clients_notes;
    private javax.swing.JScrollPane sp_notes;
    private javax.swing.JScrollPane sp_status;
    // End of variables declaration//GEN-END:variables
}
